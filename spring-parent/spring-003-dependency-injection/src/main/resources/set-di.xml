<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--外部bean-->
    <bean id="orderDaoBean" class="OrderDao"/>

    <bean id="orderServiceBean" class="com.yuan.proxy.spring6.service.OrderService">
        <!-- 使用ref属性来引入,这就是注入外部bean -->
        <property name="orderDao" ref="orderDaoBean"/>
    </bean>

    <!--  ***************** 分割 **********************   -->

    <bean id="orderServiceBean2" class="com.yuan.proxy.spring6.service.OrderService">
        <property name="orderDao">
            <!--在property标签中使用嵌套的bean标签,这就是内部bean-->
            <bean class="OrderDao"/>
        </property>
    </bean>

    <!--  ***************** 分割 **********************   -->
    <!--注入简单类型-->
    <bean id="user" class="User">
        <!--重点： 如果是给简单类型赋值，就不能使用ref了，就需要使用value了。-->
        <property name="name" value="gbanya"/>
        <property name="password" value="123"/>
        <property name="age" value="12"/>
    </bean>

    <!--  ***************** 分割 **********************   -->
    <!--注入值有特殊字符-->
    <bean id="mathBean" class="com.yuan.proxy.spring6.bean.MathBean">
        <!--第一种方案 使用实体符号代替特殊字符-->
        <!--<property name="result" value="2 &lt; 3"/>-->

        <!-- 第二种方案 <![CDATA[]]>-->
        <property name="result">
            <value><![CDATA[2 < 3]]></value>
        </property>
    </bean>

</beans>